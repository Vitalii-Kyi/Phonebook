{"version":3,"file":"static/js/868.470dd637.chunk.js","mappings":"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","sources":["pages/ContactEdit.styled.js","pages/ContactEdit.jsx","redux/contacts/selectors.js"],"sourcesContent":["import { Form } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { createGlobalStyle, styled } from 'styled-components';\n// import editImage from '../images/contact_edit.jpg';\n\nexport const ContactEditStyle = createGlobalStyle`\nbody{\n\n    background-color: #cfc89a;\n}\n`;\n\nexport const FormThumb = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 13px;\n  background-color: rgba(202, 202, 202, 0.8);\n  width: 480px;\n  margin: auto;\n  border: 2px outset black;\n  border-radius: 13px;\n  padding: 20px 28px;\n  margin-bottom: 28px;\n\n  button {\n    font-weight: bold;\n    margin-bottom: 28px;\n    padding: 4px 8px;\n    border-radius: 22px;\n    text-transform: uppercase;\n    background-color: rgba(144, 144, 144, 0.8);\n  }\n\n  button:hover,\n  button:focus {\n    background-color: black;\n    color: white;\n  }\n\n  label {\n    font-style: oblique;\n    font-weight: 500;\n    margin-bottom: 13px;\n\n    b {\n      font-size: 13px;\n      font-style: normal;\n      font-weight: 500;\n      color: #000000;\n      text-transform: lowercase;\n    }\n\n    input {\n      margin-top: 8px;\n      width: 100%;\n      padding: 2px 13px;\n      border-radius: 13px;\n      outline: none;\n      text-align: center;\n      /* background-color: rgba(255, 255, 255, 0); */\n    }\n  }\n`;\n\nexport const GoBackLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  color: blue;\n  margin: 22px auto;\n  padding: 10px;\n  width: 780px;\n  height: fit-content;\n  border: 4px outset #000;\n  border-radius: 13px;\n  background-color: rgba(119, 136, 153, 0.8);\n  font-size: 22px;\n  font-weight: 700;\n  text-transform: uppercase;\n  letter-spacing: 1.02em;\n\n  &.active {\n    color: blue;\n  }\n\n  svg {\n    width: 32px;\n    height: 32px;\n    margin-right: 8px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: rgba(119, 136, 153, 0.2);\n  }\n  /* h3 {\n    color: blue;\n    border: 4px outset blue;\n    background-color: yellow;\n    max-width: max-content;\n    border-radius: 8px;\n    padding-left: 8px;\n    padding-right: 8px;\n    margin: auto;\n    margin-bottom: 28px;\n  } */\n`;\n","import { useRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { ErrorMessage, Field, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { RiArrowLeftCircleFill } from 'react-icons/ri';\nimport { fetchEditContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { toast, Toaster } from 'react-hot-toast';\nimport { toastLoading } from 'redux/contacts/contactsSlice';\nimport { ContactEditStyle, FormThumb, GoBackLink } from './ContactEdit.styled';\nimport { Box } from 'components/GlobalStyle';\n\nconst formSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$/,\n      'Wrong name format'\n    )\n    .required('Must be filled'),\n  number: Yup.string()\n    .matches(\n      /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/,\n      'Wrong number format'\n    )\n    .required('Must be filled'),\n});\n\nexport default function ContactEdit() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const backLocationRef = useRef(location.state?.from ?? '/');\n  const { contactId } = useParams();\n  const allContacts = useSelector(selectContacts);\n  const currentContact = allContacts.find(contact => contact.id === contactId);\n\n  const initialValues = {\n    name: currentContact ? currentContact.name : '',\n    number: currentContact ? currentContact.number : '',\n  };\n\n  const handleSubmit = values => {\n    const updatedContact = {\n      name: values.name,\n      number: values.number,\n      contactId,\n    };\n\n    const editedName = values.name;\n    if (\n      allContacts.some(\n        contact => contact.name.toLowerCase() === editedName.toLowerCase()\n      )\n    ) {\n      toast.dismiss(toastLoading);\n      toast.success(\n        `Oops! ${editedName} is already exists!!! Please change it...`,\n        {\n          duration: 2000,\n          position: 'top-center',\n        }\n      );\n      return;\n    }\n\n    dispatch(fetchEditContact(updatedContact));\n    toast.dismiss(toastLoading);\n    toast.success(`Contact of ${updatedContact.name} is updated!`, {\n      duration: 2000,\n      position: 'top-center',\n    });\n    setTimeout(() => {\n      navigate(-1);\n    }, 2200);\n  };\n\n  return (\n    <>\n      <GoBackLink to={backLocationRef.current}>\n        <RiArrowLeftCircleFill /> Go back\n      </GoBackLink>\n\n      <Box>\n        <Helmet title=\"Edit contact\" />\n\n        <h2>Let's edit your contact</h2>\n\n        <Formik\n          initialValues={initialValues}\n          validationSchema={formSchema}\n          onSubmit={handleSubmit}\n        >\n          <FormThumb>\n            <label>\n              <Field\n                type=\"text\"\n                name=\"name\"\n                placeholder={`${currentContact.name}`}\n              />\n              <ErrorMessage name=\"name\" component=\"b\" />\n            </label>\n            <label>\n              <Field\n                type=\"tel\"\n                name=\"number\"\n                placeholder={`${currentContact.number}`}\n              />\n              <ErrorMessage name=\"number\" component=\"b\" />\n            </label>\n            <button type=\"submit\">Confirm changes</button>\n          </FormThumb>\n        </Formik>\n        <Toaster />\n        <ContactEditStyle />\n      </Box>\n    </>\n  );\n}","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectTotalContacts = state => state.contacts.items.length;\n\nexport const selectContactsStatus = state => state.contacts.isLoading;\n\nexport const selectContactsError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterField) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterField.toLowerCase())\n    )\n);\n"],"names":["ContactEditStyle","createGlobalStyle","_templateObject","_taggedTemplateLiteral","FormThumb","styled","Form","_templateObject2","GoBackLink","Link","_templateObject3","formSchema","Yup","shape","name","matches","required","number","ContactEdit","_location$state$from","_location$state","dispatch","useDispatch","navigate","useNavigate","location","useLocation","backLocationRef","useRef","state","from","contactId","useParams","allContacts","useSelector","selectContacts","currentContact","find","contact","id","initialValues","_jsxs","_Fragment","children","to","current","_jsx","RiArrowLeftCircleFill","Box","Helmet","title","Formik","validationSchema","onSubmit","values","updatedContact","editedName","some","toLowerCase","toast","toastLoading","concat","duration","position","fetchEditContact","setTimeout","Field","type","placeholder","ErrorMessage","component","Toaster","contacts","items","selectTotalContacts","length","selectFilter","filter","selectVisibleContacts","createSelector","filterField","includes"],"sourceRoot":""}